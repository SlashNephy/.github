name: 'docker build'

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      context:
        required: false
        type: string
        default: '.'
      dockerfile:
        required: false
        type: string
        default: 'Dockerfile'
      image-platforms:
        required: false
        type: string
        default: 'linux/amd64'
      cache-from:
        required: false
        type: string
        default: 'type=gha'
      cache-to:
        required: false
        type: string
        default: 'type=gha,mode=max'
      scan-image:
        required: false
        type: boolean
        default: true
      build-args:
        required: false
        type: string
        default: ''
      target:
        required: false
        type: string
        default: ''
      tag-spec:
        required: false
        type: string
        default: ''
      registry:
        required: false
        type: string
        default: 'ghcr.io'
      registry-username:
        required: false
        type: string
        default: ''
      dispatch-update-image-digest:
        required: false
        type: boolean
        default: false
    secrets:
      registry-password:
        required: false
      build-args:
        required: false
      dispatch-github-token:
        required: false

permissions:
  contents: read
  packages: write
  actions: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0

      - name: Login to Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: '${{ inputs.registry }}'
          username: ${{ (inputs.registry-username != '' && inputs.registry-username) || github.repository_owner }}
          password: ${{ (secrets.registry-password != '' && secrets.registry-password) || secrets.GITHUB_TOKEN }}

      - name: Prepare Image Metadata
        id: metadata
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        with:
          images: '${{ inputs.image-name }}'
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            ${{ inputs.tag-spec }}

      - name: Build Image & Push
        id: build-push-action
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          push: true
          context: '${{ inputs.context }}'
          file: '${{ inputs.context }}/${{ inputs.dockerfile }}'
          tags: '${{ steps.metadata.outputs.tags }}'
          labels: '${{ steps.metadata.outputs.labels }}'
          platforms: '${{ inputs.image-platforms }}'
          cache-from: '${{ inputs.cache-from }}'
          cache-to: '${{ inputs.cache-to }}'
          build-args: |
            IMAGE_TAG=${{ steps.metadata.outputs.version }}
            COMMIT_ID=${{ github.sha }}
            ${{ inputs.build-args }}
            ${{ secrets.build-args }}
          target: '${{ inputs.target }}'
          provenance: false

      - name: Dispatch update-image-digest
        if: inputs.dispatch-update-image-digest
        uses: peter-evans/repository-dispatch@v3
        with:
          token: '${{ secrets.dispatch-github-token }}'
          repository: 'SlashNephy/infrastructure'
          event-type: 'update-image-digest'
          client-payload: |-
            {
              "images": ${{ toJSON(fromJSON(steps.metadata.outputs.json).tags) }},
              "digest": "${{ steps.build-push-action.outputs.digest }}",
              "github": ${{ toJSON(github) }}
            }

      - name: Scan Image
        if: inputs.scan-image
        uses: crazy-max/ghaction-container-scan@a151298186f7e7acc9b3b7dc20a3fb54c6434f8f # v2.2.0
        # 頻繁に Too Many Requests が発生するので失敗しても無視する
        # https://github.com/crazy-max/ghaction-container-scan/issues/162
        continue-on-error: true
        with:
          image: '${{ fromJSON(steps.metadata.outputs.json).tags[0] }}'
          dockerfile: '${{ inputs.context }}/${{ inputs.dockerfile }}'
          annotations: true

      - name: Upload SARIF file
        if: inputs.scan-image && steps.scan.outputs.sarif != '' && github.event.repository.private == false
        uses: github/codeql-action/upload-sarif@b8d3b6e8af63cde30bdc382c0bc28114f4346c88 # v2.28.1
        with:
          sarif_file: '${{ steps.scan.outputs.sarif }}'
