name: 'docker build'

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      context:
        required: false
        type: string
        default: '.'
      dockerfile:
        required: false
        type: string
        default: 'Dockerfile'
      image-platforms:
        required: false
        type: string
        default: 'linux/amd64'
      cache-from:
        required: false
        type: string
        default: 'type=gha'
      cache-to:
        required: false
        type: string
        default: 'type=gha,mode=max'
      scan-image:
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  packages: write
  actions: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success' && !contains(github.ref, 'renovate'))
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: 'ghcr.io'
          username: '${{ github.repository_owner }}'
          password: '${{ secrets.GITHUB_TOKEN }}'

      - name: Prepare Image Metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: '${{ inputs.image-name }}'
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build Image & Push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: '${{ inputs.context }}'
          file: '${{ inputs.context }}/${{ inputs.dockerfile }}'
          tags: '${{ steps.metadata.outputs.tags }}'
          labels: '${{ steps.metadata.outputs.labels }}'
          platforms: '${{ inputs.image-platforms }}'
          cache-from: '${{ inputs.cache-from }}'
          cache-to: '${{ inputs.cache-to }}'
          build-args: |
            IMAGE_TAG=${{ steps.metadata.outputs.version }}
            COMMIT_ID=${{ github.sha }}

      - name: Scan Image
        if: inputs.scan-image
        uses: crazy-max/ghaction-container-scan@v2
        with:
          image: '${{ fromJSON(steps.metadata.outputs.json).tags[0] }}'
          dockerfile: '${{ inputs.context }}/${{ inputs.dockerfile }}'
          annotations: true

      - name: Upload SARIF file
        if: inputs.scan-image && steps.scan.outputs.sarif != '' && github.event.repository.private == false
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: '${{ steps.scan.outputs.sarif }}'
