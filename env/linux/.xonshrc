#!/usr/bin/env xonsh

$LANG = "ja_JP.UTF-8"
$LC_LANG = "ja_JP.UTF-8"

# bugfix
$XONSH_HISTORY_FILE = None

# Logging
def __init__loglevel():
    import logging
    logging.basicConfig(level=logging.INFO)
__init__loglevel()

# Twitter
import os
if os.path.exists("/opt/services/twitter"):
    import sys
    sys.path.append("/opt/services/twitter")
    from twitter import *

# Docker
$DOCKER_BUILDKIT = 1

# System
$XONSH_HISTORY_SIZE = (4096, "commands")
$XONSH_HISTORY_BACKEND = "sqlite"
$SUPPRESS_BRANCH_TIMEOUT_MESSAGE = True
$VC_BRANCH_TIMEOUT = 0.5
$UPDATE_OS_ENVIRON = True
$XONSH_CACHE_EVERYTHING = True
$XONSH_CACHE_SCRIPTS = False
$XONSH_TRACEBACK_LOGFILE = None
$XONSH_STORE_STDIN = True
$XONSH_DATETIME_FORMAT = "%Y/%m/%d %H:%M:%S"
$XONSH_SHOW_TRACEBACK = True
$IGNOREEOF = True
$SYSTEMD_LESS = "FRXMK"

# Completions
$UPDATE_COMPLETIONS_ON_KEYPRESS = True
$AUTO_SUGGEST = True
$AUTO_SUGGEST_IN_COMPLETIONS = True
$COMPLETIONS_DISPLAY = "single"
$COMPLETIONS_MENU_ROWS = 3
$COMPLETION_IN_THREAD = True
$COMPLETIONS_CONFIRM = False
$BASH_COMPLETIONS = ("/usr/share/bash-completion/bash_completion",)
$CASE_SENSITIVE_COMPLETIONS = False
$COMPLETIONS_BRACKETS = True
$FUZZY_PATH_COMPLETION = True
$SUBSEQUENCE_PATH_COMPLETION = True
$SUGGEST_COMMANDS = True
$SUGGEST_MAX_NUM = 5
$XONSH_AUTOPAIR = True
$XONSH_HISTORY_MATCH_ANYWHERE = True
$HISTCONTROL = set("ignoredups")
$PATHEXT.append(".SH")

# Directories
$AUTO_CD = True
$DOTGLOB = True
$GLOB_SORTED = True

# xontrib-readable-traceback: https://github.com/vaaaaanquish-xx/xontrib-readable-traceback
xontrib load readable-traceback
$READABLE_TRACE_STRIP_PATH_ENV = True
$READABLE_TRACE_REVERSE = True

# Prompts
# $UPDATE_PROMPT_ON_KEYPRESS = True
xontrib load powerline3

$POWERLINE_MODE = "powerline"

$PROMPT = "{cwd: {} } "
$PROMPT_FIELDS["cwd__pl_colors"] = ("WHITE", "#444")
$PROMPT_FIELDS["cwd__pl_sep"] = "no_sep_plz"

$RIGHT_PROMPT = "{exit_code: {} }{timing: {}s }{localtime: {} }"
# $RIGHT_PROMPT = "{exit_code: {} }{timing: {}s }{gitstatus: î‚  {} }{localtime: {} }"
def _exit_code():
    from xonsh.built_ins import XSH
    if obj := XSH.history.rtns:
        code = obj[-1]
        if code != 0:
            return f"{code}!"
$PROMPT_FIELDS["exit_code"] = _exit_code
$PROMPT_FIELDS["exit_code__pl_colors"] = ("WHITE", "RED")
def _timing():
    from xonsh.built_ins import XSH
    if obj := XSH.history.tss:
        tss = obj[-1]
        return round(tss[1] - tss[0], 2)
$PROMPT_FIELDS["timing"] = _timing
$PROMPT_FIELDS["timing__pl_colors"] = ("WHITE", "#444")
$PROMPT_FIELDS["time_format"] = "%H:%M:%S"
$PROMPT_FIELDS["localtime__pl_colors"] = ("BLACK", "#00adee")

## Theme
$COLOR_INPUT = True
$COLOR_RESULTS = True
$PRETTY_PRINT_RESULTS = True
$INDENT = "  "
$MULTILINE_PROMPT = "."
$XONSH_COLOR_STYLE = "native"

## less
$PAGER = "cat"
$GIT_PAGER = "cat"
$LESS = "-g -i -M -R -S -W -z-4 -x4"

# Aliases
def as_alias(func):
    name = func.__name__.lstrip("_")
    aliases[name] = func
    return func

## override defaults
aliases["ls"] = "ls -a --color=auto"
aliases["ll"] = "ls -alhN --color=auto --group-directories-first --tabsize=4 --time-style '+%Y-%m-%d %H:%M:%S' --hyperlink=auto"
aliases["cp"] = "cp -iv"
aliases["mv"] = "mv -iv"
aliases["rm"] = "rm -v"
## Colorful aliases
aliases["diff"] = "diff --color=auto"
aliases["grep"] = "grep --color=auto"
aliases["ip"] = "ip --color=auto"
aliases["dmesg"] = "dmesg --color=always"

aliases["ufw"] = "sudo ufw"
aliases["chmod"] = "chmod --preserve-root"
aliases["chown"] = "chown --preserve-root"
aliases["src"] = "source ~/.xonshrc"
aliases["reload"] = "clear; src"
aliases["sano"] = "sudo nano --rcfile=~/.nanorc"
aliases["systemctl"] = "sudo systemctl"
aliases["journalctl"] = "sudo journalctl"
aliases["cowsay"] = "docker run --rm docker/whalesay cowsay"
aliases["ojichat"] = "docker run --rm -i greymd/ojichat:latest"
aliases["tarcomp"] = "tar acvf"
aliases["tarext"] = "tar xvf"
aliases["dc"] = "docker compose"
aliases["erutaso"] = "docker run --rm -it slashnephy/erutaso:latest"

def docker_volume_cp(src, dest):
    $[docker run -it --rm -v @(src + ":/from:ro") -v @(dest + ":/to") alpine:latest sh -c "cp -av /from/* /to"]
